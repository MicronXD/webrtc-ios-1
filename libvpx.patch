Index: source/libvpx/vp8/decoder/decodeframe.c
===================================================================
--- source/libvpx/vp8/decoder/decodeframe.c	(revision 259973)
+++ source/libvpx/vp8/decoder/decodeframe.c	(working copy)
@@ -248,7 +248,11 @@
 
                     vp8_short_inv_walsh4x4(&b->dqcoeff[0],
                         xd->qcoeff);
-                    vpx_memset(b->qcoeff, 0, 16 * sizeof(b->qcoeff[0]));
+                    // TODO(johannkoenig): figure out why bzero below
+                    // works great on iOS Release but memset or
+                    // vpx_memset create terrible corruption on decode
+                    // (https://code.google.com/p/webm/issues/detail?id=603).
+                    bzero(b->qcoeff, 16 * sizeof(b->qcoeff[0]));
                 }
                 else
                 {
Index: source/libvpx/vp8/encoder/pickinter.c
===================================================================
--- source/libvpx/vp8/encoder/pickinter.c	(revision 259973)
+++ source/libvpx/vp8/encoder/pickinter.c	(working copy)
@@ -874,6 +874,12 @@
 
             int speed_adjust = (cpi->Speed > 5) ? ((cpi->Speed >= 8)? 3 : 2) : 1;
 
+            // TODO(johannkoenig): figure out why this is necessary to
+            // avoid a crash on iOS Release:
+            // https://code.google.com/p/webrtc/issues/detail?id=3038.
+            if ((intptr_t)&tmp_row_min == 0x42)
+              *(char*)0x1 = 1;
+
             /* Further step/diamond searches as necessary */
             step_param = cpi->sf.first_step + speed_adjust;
 
